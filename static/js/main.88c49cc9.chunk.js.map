{"version":3,"sources":["components/Navigation/Navigation.module.css","pages/styles.module.css","routes.js","components/Navigation/Navigation.js","services/apiRequest.js","pages/HomePage.js","components/SearchBar/SearchBar.js","pages/MoviePage.js","components/Reviews/Reviews.js","components/Cast/Cast.js","pages/MovieDetailsPage.js","components/App.js","index.js"],"names":["module","exports","Navigation","className","styles","nav","exact","to","routes","link","activeClassName","active","moviePoster","fetchMoviesTrending","fetch","then","res","json","fetchMovieSearch","searchQuery","data","results","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","HomePage","state","movies","fetchTrending","apiRequest","setState","this","wrapper","map","movie","key","id","title","Component","SearchBar","value","onChange","e","target","onSubmit","preventDefault","props","onSearch","type","MoviePage","setSearchQuery","history","push","location","search","query","URLSearchParams","get","prevProps","prevQuery","nextQuery","match","pathname","url","from","original_title","original_name","Reviews","reviews","params","apiReaquest","review","author","content","Cast","actors","fetchMovieActors","console","log","length","actor","shortid","generate","src","profile_path","alt","name","width","character","MovieDetailsPage","fetchDetails","onGoBack","onClick","poster_path","popularity","overview","genres","genre","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88c49cc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2UYD2\",\"link\":\"Navigation_link__RFTvL\",\"active\":\"Navigation_active__9K764\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__2aNVc\"};","export default {\r\n    HOME: '/',\r\n    MOVIES: '/movies',\r\n    MOVIES_DETAILS: '/movies/:movieId',\r\n    CAST: 'cast',\r\n    REVIEWS: 'reviews',\r\n  };","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation = () => (\r\n    <ul className={styles.nav}>\r\n        <li>\r\n            <NavLink exact to={routes.HOME} className={styles.link}\r\n            activeClassName={styles.active}\r\n            >\r\n                Home\r\n            </NavLink>\r\n        </li>\r\n        <li>\r\n            <NavLink to={routes.MOVIES}\r\n            className={styles.link}\r\n            activeClassName={styles.active}\r\n            >\r\n                Movies\r\n            </NavLink>\r\n        </li>\r\n    </ul>\r\n);\r\n\r\nexport default Navigation;","const moviePoster = 'https://image.tmdb.org/t/p/w300';\r\n\r\nconst fetchMoviesTrending = () => {\r\n    return fetch(\r\n        'https://api.themoviedb.org/3/trending/all/day?api_key=08ce4741fc784e2e0a74eb2fa686235b',\r\n    ).then(res => res.json());\r\n};\r\n\r\nconst fetchMovieSearch = searchQuery => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=08ce4741fc784e2e0a74eb2fa686235b&language=en-US&page=1&include_adult=false`\r\n    ).then(res => res.json())\r\n    .then(data => data.results);\r\n};\r\n\r\nconst fetchMovieDetails = movieId => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=08ce4741fc784e2e0a74eb2fa686235b&language=en-US`\r\n    ).then(res => res.json());\r\n};\r\n\r\nconst fetchMovieCast = movieId => {\r\n    return fetch(\r\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=08ce4741fc784e2e0a74eb2fa686235b`\r\n    ).then(res => res.json())\r\n    .then(data => data.cast);\r\n};\r\n\r\nconst fetchMovieReviews = movieId => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=08ce4741fc784e2e0a74eb2fa686235b&language=en-US&page=1`,\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => data.results);\r\n  };\r\n\r\nexport default {\r\n    moviePoster,\r\n    fetchMoviesTrending,\r\n    fetchMovieSearch,\r\n    fetchMovieDetails,\r\n    fetchMovieCast,\r\n    fetchMovieReviews,\r\n};\r\n\r\n","  import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport styles from './styles.module.css';\r\n\r\nimport apiRequest from '../services/apiRequest';\r\n\r\nexport default class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTrending();\r\n  }\r\n\r\n  fetchTrending = () => {\r\n    apiRequest.fetchMoviesTrending().then(data => {\r\n      this.setState({ movies: data.results });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {movies} = this.state;\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1>Trending today</h1>\r\n\r\n        <ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to={`${routes.MOVIES}/${movie.id}`}>\r\n                {movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport T from 'prop-types';\r\n\r\nexport default class SearchBar extends Component {\r\n    static propTypes = {\r\n        onSearch: T.func.isRequired,\r\n    };\r\n\r\n    state = {value: ''};\r\n\r\n    onChange = e => {\r\n        this.setState({value: e.target.value});\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSearch(this.state.value);\r\n        this.setState({value: ''});\r\n    };\r\n\r\n    render() {\r\n        const {value} = this.state;\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input type=\"text\" value={value} onChange={this.onChange} />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport T from 'prop-types';\r\n\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport apiRequest from '../services/apiRequest';\r\nimport styles from '../pages/styles.module.css';\r\n\r\n\r\nexport default class MoviePage extends Component {\r\n  static propTypes = {\r\n    location: T.shape().isRequired,\r\n    history: T.shape().isRequired,\r\n    match: T.shape().isRequired,\r\n  };\r\n\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location } = this.props;\r\n    const query = new URLSearchParams(location.search).get('query');\r\n    if (!query) return;\r\n  \r\n    apiRequest.fetchMovieSearch(query).then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n    }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { location } = this.props;\r\n    const prevQuery = new URLSearchParams(prevProps.location.search).get(\r\n      'query',\r\n    );\r\n\r\n    const nextQuery = new URLSearchParams(location.search).get('query');\r\n\r\n    if (prevQuery === nextQuery) return;\r\n\r\n    apiRequest.fetchMovieSearch(nextQuery).then(movies => {\r\n      this.setState({ movies });\r\n    });\r\n\r\n  }\r\n\r\n  setSearchQuery = searchQuery => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `query=${searchQuery}`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    const {match, location} = this.props;\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1>Movies</h1>\r\n        \r\n        <SearchBar onSearch={this.setSearchQuery} />\r\n\r\n        <ul>\r\n          {movies.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${match.url}/${movie.id}`,\r\n                  state: {from: location},\r\n                }}\r\n              >\r\n                {movie.original_title || movie.original_name}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport T from 'prop-types';\r\nimport apiReaquest from '../../services/apiRequest';\r\n\r\n\r\nexport default class Reviews extends Component {\r\n  static propTypes = {\r\n    match: T.shape().isRequired,\r\n  };\r\n\r\n  state = {\r\n      reviews: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n      this.fetchMovieReviews();\r\n  }\r\n\r\n  fetchMovieReviews = () => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    apiReaquest.fetchMovieReviews(movieId).then(reviews => {\r\n      this.setState({ reviews });\r\n    });  \r\n  };\r\n    \r\n\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n\r\n    return (\r\n        <>\r\n          {reviews && (\r\n            <ul>\r\n              {reviews.map(review => (\r\n                <li key={review.id}>\r\n                  <h3>{review.author}</h3>\r\n                  <p>{review.content}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }","import React, {Component} from 'react';\r\nimport T from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport apiRequest from '../../services/apiRequest';\r\n\r\nexport default class Cast extends Component {\r\n  static propTypes = {\r\n    match: T.shape().isRequired,\r\n  };\r\n\r\n  state = {\r\n    actors: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchMovieActors();\r\n  }\r\n\r\n  fetchMovieActors = () => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    apiRequest.fetchMovieCast(movieId).then(actors => {\r\n      this.setState({ actors });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { actors } = this.state;\r\nconsole.log(actors);\r\n    return (\r\n      <>\r\n        {actors.length > 0 && (\r\n          <ul>\r\n            {actors.map(actor => (\r\n              <li key={shortid.generate()}>\r\n                <img\r\n                  src={apiRequest.moviePoster + actor.profile_path}\r\n                  alt={actor.name}\r\n                  width=\"100\"\r\n                />\r\n                <h3>{actor.name}</h3>\r\n                <p>Character: {actor.character}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Link, Switch } from 'react-router-dom';\r\nimport T from 'prop-types';\r\nimport apiRequest from '../services/apiRequest';\r\nimport Reviews from '../components/Reviews/Reviews';\r\nimport routes from '../routes';\r\n\r\nimport Cast from '../components/Cast/Cast';\r\n\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  static propTypes = {\r\n    match: T.shape().isRequired,\r\n    location: T.shape().isRequired,\r\n    history: T.shape({\r\n      goBack: T.func.isRequired,\r\n    }).isRequired,\r\n  };\r\n\r\n  state = { movie: null };\r\n\r\n  componentDidMount() {\r\n    this.fetchDetails();\r\n  }\r\n\r\n  fetchDetails = () => {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    apiRequest.fetchMovieDetails(movieId).then(movie => {\r\n      this.setState({ movie });\r\n    });\r\n  };\r\n\r\n  onGoBack = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state) {\r\n      history.push(location.state.from);\r\n    } else history.push(\"/\");\r\n  };\r\n\r\n    \r\n  render() {\r\n    const { movie } = this.state;\r\n    const { match } = this.props;\r\n    const { state } = this.props.location;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.onGoBack}>\r\n          Go back\r\n        </button>\r\n\r\n        <h1>Movie Details</h1>\r\n\r\n        {movie && (\r\n          <>\r\n            <img\r\n              src={apiRequest.moviePoster + movie.poster_path}\r\n              alt={movie.title}\r\n            />\r\n            <h2>{movie.original_title || movie.original_name}</h2>\r\n            <p>User score: {movie.popularity}%</p>\r\n            <h3>Overview:</h3>\r\n            <p>{movie.overview}</p>\r\n            <h3>Genres:</h3>\r\n            <p>{movie.genres.map(genre => genre.name)}</p>\r\n          </>\r\n        )}\r\n\r\n        <p>Additional information</p>\r\n\r\n        <ul>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/${routes.CAST}`,\r\n                state\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `${match.url}/${routes.REVIEWS}`,\r\n                state\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <hr />\r\n        <Switch>\r\n        <Route path={`${match.path}/${routes.CAST}`} component={Cast} />\r\n        <Route path={`${match.path}/${routes.REVIEWS}`} component={Reviews} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport Navigation from './Navigation/Navigation';\r\nimport HomePage from '../pages/HomePage';\r\nimport MoviePage from '../pages/MoviePage';\r\nimport MovieDetailsPage from '../pages/MovieDetailsPage';\r\n\r\nimport routes from '../routes';\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n    <Navigation />\r\n\r\n    <div>\r\n        <Switch>\r\n            <Route exact path={routes.HOME} component={HomePage} />\r\n            <Route path={routes.MOVIES_DETAILS} component={MovieDetailsPage} />\r\n            <Route path={routes.MOVIES} component={MoviePage} />\r\n            <Redirect to={routes.HOME} />\r\n        </Switch>\r\n    </div>\r\n    \r\n    </BrowserRouter>\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}